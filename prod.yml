 - hosts: all
   remote_user: root
   vars:
   - user: sproutwave
   - pubkey: id_ed25519.rock.pub
   tasks:
   - user: name=name state=present shell=/bin/dash uid=1000 # TODO: REMOVE BEFORE SHIP
   - user: name=sproutwave state=present shell=/bin/dash uid=1001
   - user: name=root state=present shell=/bin/dash password="$6$EkvdWKEEE6HYST$6tzF5cd667Xo1umUAHKKLoadE1ifKYmU6SAbORfj.j7ndomyHPz58cmIbrcCwEh8p67wQ7NWOby.07rwcmbm6/"
   - name: aptitude
     apt: name=aptitude state=installed
   - name: setup resolv.conf
     lineinfile: path=/run/resolvconf/resolv.conf line='nameserver 8.8.8.8' create=yes state=present
   - name: apt-get update && apt-get upgrade
     apt: update_cache=yes upgrade=yes
   - name: install list of packages
     apt: name={{item}} state=installed
     with_items:
      - mtd-utils
      - python3
      - tmux
      - psutils
      - usb-modeswitch
      - rsync
      - tor
      - curl # TODO: REMOVE BEFORE SHIP
      - overlayroot # to freeze image; echo 'overlayroot="tmpfs"' >> /etc/overlayroot.conf
   - name: remove list of packages
     apt: name={{item}} state=absent autoremove=yes autoclean=yes
     with_items:
      - build-essential # no compiling!
      - linux-libc-dev
      - libc6-dev
      - autoconf
      - autotools-dev
      - binutils
      - gcc5
      - cpp
      - libasound2 # no audio
      - wget # no downloads!
      - git
      - ntfs-3g # just no
   - name: enable admin pubkey for root
     authorized_key:
       user: root
       state: present
       key: '{{item}}'
     with_file:
       - '{{pubkey}}'
   - name: enable admin pubkey for user
     authorized_key:
       user: '{{user}}'
       state: present
       key: '{{item}}'
     with_file:
       - '{{pubkey}}'
   - name: set dtb overlays
     lineinfile: path=/boot/armbianEnv.txt
                 regexp="^overlays"
                 line="overlays=usbhost1 usbhost2 i2c0 spi-jedec-nor"
   - name: set param for spi flash
     lineinfile: path=/boot/armbianEnv.txt
                 line="param_spinor_spi_bus=0"
                 state=present
   - name: enable tor hidden service on 25052 (1/2)
     lineinfile: path=/etc/tor/torrc
                 insertafter="^#HiddenServiceDir"
                 line="HiddenServiceDir /var/lib/tor/hidden_service/"
                 state=present
   - name: enable tor hidden service on 25052 (2/2)
     lineinfile: path=/etc/tor/torrc
                 insertafter="^HiddenServiceDir"
                 line="HiddenServicePort 25052 127.0.0.1:25052"
                 state=present
   - name: change ssh port from 22 to 25052
     lineinfile: path=/etc/ssh/sshd_config
                 regexp="^Port"
                 line="Port 25052"
                 state=present
   - name: disallow password authentication
     lineinfile: path=/etc/ssh/sshd_config
                 line="PasswordAuthentication no"
                 state=present
   - file: path=/etc/modules state=absent
   - name: enable g_ether
     lineinfile: path=/etc/modules
                 line='g_ether'
                 state=present
                 create=yes
   - name: blacklist rtlsdr
     lineinfile: path=/etc/modprobe.d/blacklist-dvb_usb_rtl28xxu.conf
                 line='blacklist dvb_usb_rtl28xxu'
                 state=present
                 create=yes
   - file: path=/home/{{user}}/init.py state=absent
   - name: stub out minimal python hook (user)
     lineinfile: path=/home/{{user}}/init.py
                 line='import time, os;not os.fork() or os._exit(0);f = open("/tmp/live-unpriv", "w");[time.sleep(10) or print(time.time(), file=f, flush=True) for _ in range(1000)]'
                 state=present
                 create=yes
                 owner={{user}}
                 group={{user}}
   - file: path=/root/init.py state=absent
   - name: stub out minimal python hook (root)
     lineinfile: path=/root/init.py
                 line='import time, os;not os.fork() or os._exit(0);f = open("/tmp/live-priv", "w");[time.sleep(10) or print(time.time(), file=f, flush=True) for _ in range(1000)]'
                 state=present
                 create=yes
   - name: install user init service (unprivileged)
     copy: src=resources/init-user-unprivileged.service dest=/lib/systemd/system/init-user-unprivileged.service mode=644
   - name: install user init service (privileged)
     copy: src=resources/init-user-privileged.service dest=/lib/systemd/system/init-user-privileged.service mode=644
   - name: disable armbian login prompt
     file: state=absent path=/root/.not_logged_in_yet
   - name: enable init services
     command: systemctl enable init-user-unprivileged init-user-privileged
   - name: disable serial
     command: systemctl disable serial-getty@ttyGS0
   - name: disable serial
     command: systemctl disable serial-getty@ttyS0
   - name: delete root password
     command: passwd -l root
   - name: enable non-root access to rtlsdr
     copy: src=resources/rtl-sdr.rules dest=/etc/udev/rules.d/ mode=644
